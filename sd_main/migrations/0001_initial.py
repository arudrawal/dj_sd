# Generated by Django 5.2 on 2025-04-30 18:25

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('driving_license', models.CharField(max_length=50)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_number', models.CharField(max_length=100)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular policy across whole database')),
                ('policy_type', models.CharField(choices=[('auto', 'Auto'), ('life', 'Life')], default='auto', help_text='Policy type', max_length=32)),
                ('policy_owner', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField()),
                ('status', models.CharField(blank=True, choices=[('Expired', 'Expired'), ('Renewal', 'Renewal'), ('Completed', 'Completed')], default='Renewal', help_text='Renewal pending', max_length=32)),
                ('owner_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_email', models.CharField(blank=True, max_length=100, null=True)),
                ('driver', models.ManyToManyField(help_text='Select a driver for this policy', to='sd_main.driver')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='PolicyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular policy document')),
                ('file_name_uploaded', models.CharField(max_length=512)),
                ('file_name_cloud', models.CharField(max_length=512)),
                ('file_type', models.CharField(max_length=32)),
                ('file_text_extract', models.TextField(null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('policy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sd_main.policy')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vin', models.CharField(max_length=100)),
                ('license_plate', models.CharField(max_length=50)),
                ('reg_end_date', models.DateField()),
                ('registered_owner', models.CharField(max_length=100)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
        ),
        migrations.AddField(
            model_name='policy',
            name='vehicle',
            field=models.ManyToManyField(help_text='Select a vehicle for this policy', to='sd_main.vehicle'),
        ),
        migrations.CreateModel(
            name='GroupSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.TextField(max_length=1024)),
                ('json_value', models.JSONField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('group', 'name'), name='unique_group_setting')],
            },
        ),
    ]
